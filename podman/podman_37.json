{
  "name": "CPU exhausted",
  "description": "Detects high CPU usage",
  "type": "MANUAL",
  "tags": [
     ""
  ],
  "fields": [
    {
        "name": "content",
        "description": "Content for manual action",
        "encoding": "base64",
        "value": "
1. Check if there are any running containers that are consuming excessive resources. You can use the command `podman ps -a` to list all running containers and their resource usage.
2. If you find a container consuming too many resources, you can try stopping or killing that container using the command `podman stop <container_name>` or `podman kill <container_name>`. Be careful when stopping or killing containers as it may impact your application's functionality.
3. Another solution is to adjust the CPU allocation for the Podman daemon. By default, the CPU allocation is set to 100m (or 0.1 cores). You can modify this value by editing the `/etc/containers/podman.conf` file and changing the `CPUShares` value to a higher number. However, keep in mind that increasing the CPU shares might increase the risk of CPU exhaustion.
4. If you're still experiencing issues, you can consider reducing the number of concurrent operations or limiting the overall system load. This can be done by adjusting system settings or prioritizing less resource-intensive tasks.

It's important to note that monitoring CPU usage and addressing potential bottlenecks proactively can help prevent future occurrences of CPU exhaustion. Regularly checking resource utilization and making adjustments as needed can ensure smooth operation and prevent potential performance issues.",
        "secured": false
    }
],
  "staticId": "containerCPUDebug",
  "metadata": {
    "ai": [
      {
        "algorithm": "watsonx",
        "events": ["Jhm8n8hhHw0MnSlAkViXC1yIrWE"]
      }
    ]
  }
}