{
  "name": "Replication lag is growing",
  "description": "This detector monitors all the members of MongoDB Replica Sets and identifies if the replication lag is increasing too fast.",
  "type": "MANUAL",
  "tags": [
    "container",
    "docker",
    "podman",
    "cpu",
    "diagnostic",
    "watsonx"
  ],
  "fields": [
    {
        "name": "content",
        "description": "Content for manual action",
        "encoding": "base64",
        "value": " 1. Check for network connectivity issues between nodes by running the command "netstat -an | grep mongod". If there are any connections refused or timeouts, check your network configuration and firewall rules.
2. Analyze the MongoDB logs on the primary and secondary nodes to identify any errors or warnings related to the replication process. You may use tools like "journalctl" on Linux systems or "tasklist" on Windows systems to view the logs.
3. Ensure that the MongoDB system variables are set correctly on both the primary and secondary nodes. Specifically, the "replSetW", "rsMaintainQuorum", and "oplogSize" variables should be configured appropriately.
4. Monitor the replication status using tools like "mongostat" or "rs.status()". These tools can help you identify if the replication lag is increasing rapidly and provide insights into potential bottlenecks.
5. If the replication lag persists, consider adding more replicas to the replica set to distribute the workload and reduce the load on each node.
6. Lastly, if none of the above steps resolve the issue, it might be necessary to restart the MongoDB service on one or more of the nodes in the replica set.

By following these steps, you can effectively diagnose and address the issue of increasing replication lag in MongoDB Replica Sets.",
        "secured": false
    }
],
  "staticId": "containerCPUDebug",
  "metadata": {
    "ai": [
      {
        "algorithm": "watsonx",
        "events": ["9o2p9OoX8l0muwgvaXsDfGdUmUY"]
      }
    ]
  }
}