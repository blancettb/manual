{
  "name": "Scheduling delay is high",
  "description": "Scheduling delay is increasing too fast or is too high",
  "type": "MANUAL",
  "tags": [
     ""
  ],
  "fields": [
    {
        "name": "content",
        "description": "Content for manual action",
        "encoding": "base64",
        "value": " 1. Increase the number of partitions in your data source RDDs and job stages. This can help reduce the overall execution time and decrease the scheduling delay.
2. Optimize the code by removing unnecessary operations, reducing function calls, and minimizing data transfers. This can help improve the performance and reduce the scheduling delay.
3. Monitor the driver memory usage and increase it if necessary. A large driver memory can lead to increased scheduling delays.
4. Check for any resource contention issues, such as excessive I/O wait times or CPU utilization. If found, optimize the application to reduce these issues and improve the scheduling delay.
5. Use the Spark UI to identify any tasks that are experiencing long scheduling delays. Analyze these tasks to determine if they can be optimized or if they need to be rescheduled.
6. If the issue persists, consider using Spark's built-in profiling tools to identify bottlenecks and optimize the application accordingly.
7. If none of the above steps work, you may need to reevaluate your data processing strategy or upgrade to a more powerful hardware configuration.

By following these steps, you should be able to effectively address the high scheduling delay issue in your Spark application.",
        "secured": false
    }
],
  "staticId": "containerCPUDebug",
  "metadata": {
    "ai": [
      {
        "algorithm": "watsonx",
        "events": ["j3cS1EOWhht1GNKvKUwqm0VbJGU"]
      }
    ]
  }
}