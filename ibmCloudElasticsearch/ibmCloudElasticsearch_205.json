{
  "name": "Percentage of time spent on garbage collection over 15 minutes is too high",
  "description": "Checks whether the average garbage collection percentage over 15 minutes exceeds the configured threshold",
  "type": "MANUAL",
  "tags": [
     ""
  ],
  "fields": [
    {
        "name": "content",
        "description": "Content for manual action",
        "encoding": "base64",
        "value": "
1. Check the version and configuration of your Elasticsearch nodes. Ensure that they are up-to-date and properly configured for optimal performance. You might need to adjust settings such as `heap_size` or `index.gc.interval`.
2. Analyze the garbage collection logs to identify any patterns or trends in the data being collected. This can help you determine if there are any specific queries, indices, or plugins contributing to an increased garbage collection rate.
3. Review the application's resource utilization to ensure that it is not causing excessive stress on the Elasticsearch nodes. Monitor CPU, memory, and disk usage to identify any potential bottlenecks or spikes in resource consumption.
4. Investigate the possibility of running outdated plugins or modules that could be causing compatibility issues or unexpected behavior. Update any problematic components to the latest versions.
5. If the issue persists, consider increasing the heap size of your Elasticsearch nodes to accommodate more data before it is evicted from memory during garbage collection. However, be cautious not to allocate too much memory, as this can lead to other performance issues.
6. Optimize your indexing strategy by using smaller index sizes, compressing data, and implementing query filters to reduce the amount of data that needs to be processed and stored.
7. Implement monitoring and alerting mechanisms to track the garbage collection rate over time and receive notifications when it exceeds the configured threshold. This will allow you to take proactive measures to address the issue before it becomes critical.
8. Consult with Elasticsearch experts or consult the official documentation for further guidance and best practices for optimizing garbage collection and overall system performance.",
        "secured": false
    }
],
  "staticId": "containerCPUDebug",
  "metadata": {
    "ai": [
      {
        "algorithm": "watsonx",
        "events": ["Gus2-ewWTXrynvnifrsNbyuupEc"]
      }
    ]
  }
}