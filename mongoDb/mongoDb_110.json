{
  "name": "Increasing page faults",
  "description": "This rule monitors the MongoDB Page Faults metric and checks whether the page faults are increasing too fast.",
  "type": "MANUAL",
  "tags": [
     ""
  ],
  "fields": [
    {
        "name": "content",
        "description": "Content for manual action",
        "encoding": "base64",
        "value": " 1. Analyze your database usage: Identify if there is any particular query or operation that is causing high page fault rates. You can use tools like MongoDB's built-in profiler to identify such queries.
2. Optimize your database configuration: Ensure that your MongoDB instance has sufficient memory allocated for caching data and handling page faults. You appropriate amount of memory depends on the size of your dataset and the expected concurrent user load.
3. Implement query optimization: Review your application's queries and optimize them to reduce the number of page faults. This may involve rewriting queries to use indexing, reducing the result set size, or using aggregation pipelines to process data more efficiently.
4. Monitor and tune MongoDB metrics: Regularly monitor MongoDB's metrics, such as page faults, to identify trends and potential issues early. You can use tools like Prometheus or Grafana to visualize and analyze these metrics.
5. Perform regular backups: In case of a crash or unexpected shutdown, having a recent backup of your database can help minimize data loss and simplify recovery.

By following these steps, you can effectively address the Increasing page faults issue in MongoDB and ensure optimal performance for your application.",
        "secured": false
    }
],
  "staticId": "containerCPUDebug",
  "metadata": {
    "ai": [
      {
        "algorithm": "watsonx",
        "events": ["OiuYx-PLid83yW4pGU__o0UmZ0Y"]
      }
    ]
  }
}